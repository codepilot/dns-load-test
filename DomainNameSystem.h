#pragma once

#include "Platform.h"

namespace DomainNameSystem {

	const uint8_t udpMsgData[80]{
		0x02, 0xdc, //Transaction ID: 0x02DC
		0x01, 0x00, //Flags: 0x0100 Standard Query
		0x00, 0x01, //Questions: 1
		0x00, 0x00, //Answers: 0
		0x00, 0x00, //Authority: 0
		0x00, 0x00, //Additionals: 0

		//Query[0]: ns4.archeofutur.us: type AAAA, class IN
		0x03, //3 bytes
			0x6e, 0x73, 0x34, // "ns4"

		0x0b, // 11 bytes
			0x61, 0x72,	0x63, 0x68, 0x65, 0x6f, 0x66, 0x75, 0x74, 0x75, 0x72, // "archeofutur"

		0x02, // 2 bytes
			0x75, 0x73, // "us"

		0x00, // 0 bytes, end of domain name

		0x00, 0x1c, //type 28 AAAA
		0x00, 0x01 //Class 1 Internet
	};

	const uint8_t udpMsgReply[80]{
		0x02, 0xdc, //Transaction ID: 0x02DC
		0x85, 0x20, //Flags: 0x8520 Response, Authoritative, recursive, authenticated, 
		0x00, 0x01, //Questions: 1
		0x00, 0x02, //Answers: 2
		0x00, 0x00, //Authority: 0
		0x00, 0x00, //Additionals: 0

		//Query[0]: ns4.archeofutur.us: type AAAA, class IN
		0x03, //3 bytes
			0x6e, 0x73, 0x34, // "ns4"

		0x0b, // 11 bytes
			0x61, 0x72,	0x63, 0x68, 0x65, 0x6f, 0x66, 0x75, 0x74, 0x75, 0x72, // "archeofutur"

		0x02, // 2 bytes
			0x75, 0x73, // "us"

		0x00, // 0 bytes, end of domain name

		0x00, 0x1c, //type 28 AAAA
		0x00, 0x01, //Class 1 Internet

		//Answer[0]
		0xc0, 0x0c, //pointer to ns4.archeofutur.us
		0x00, 0x1c, //type 28 AAAA
		0x00, 0x01, //Class 1 Internet

		0x00, 0x00, 0x00, 0x01, //TTL
		0x00, 0x10, //data length 16
		0x00, 0xfd, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, //fd:0:10:2:0:4::

		//Answer[1]
		0xc0, 0x0c,//pointer to ns4.archeofutur.us
		0x00, 0x10,//type txt
		0x00, 0x01,//Class 1 Internet
		0x00, 0x00, 0x00, 0x01, //TTL
		0x00, 0x04, //data len 4 bytes
		0x02, //2 byte part
			0x61, 0x62,
		0x00 //0 byte part
	};

	bool doesReplyMatchVector(std::vector<uint8_t> reply) {
		if (reply.size() != sizeof(udpMsgReply)) { return false; }
		for (size_t i = 2; i < sizeof(udpMsgReply); i++) {
			if (reply[i] != udpMsgReply[i]) { return false; }
		}
		return true;
	}
};